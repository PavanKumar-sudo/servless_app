name: Serverless URL Shortener CI/CD

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.6.0
  PYTHON_VERSION: "3.12"

jobs:
  lint-and-test:
    name: Lint & Unit Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          . venv/bin/activate
          flake8 create_link.py redirect.py

      - name: Run Unit Tests
        run: |
          . venv/bin/activate
          PYTHONPATH=. pytest tests/

  build-lambda:
    name: Build Lambda Zip Artifacts
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Lambda Zips with Docker
        run: |
          chmod +x ./build_lambda_zip.sh
          ./build_lambda_zip.sh create_link.py create_link.zip
          ./build_lambda_zip.sh redirect.py redirect.zip

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lambda-zips
          path: |
            create_link.zip
            redirect.zip

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: build-lambda

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: lambda-zips

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan 

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: lambda-zips

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve 
